import Head from "next/head";
import Component from "../components/login-btn";
import styles from "../styles/Home.module.css";
import { useForm } from "react-hook-form";
import { useEffect, useState } from "react";
import { useSession, signIn, signOut } from "next-auth/react"

import { getToken } from "next-auth/jwt";
export default function Login() {
const [error, Seterrros] = useState('')
   const { data: session } = useSession()

   
    const { register, handleSubmit, watch, formState: { errors } } = useForm();
   async function onSubmit(datas) {
     
        console.log('my session')
        console.log(session)
        console.log(datas.email)
        console.log(datas.senha)
 
     const result =  await  signIn('credentials', {email:datas.email, senha:datas.senha,redirect: false, callbackUrl:'/' })
    console.log(result)

    if(result.status == 401){
        return Seterrros(result.error)
    }else if (result.status == 200){
       return  Seterrros('logado com sucesso')
    }
    }


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
       

        <h6 className={styles.title}>
           fa√ßa login pra continuar 
        </h6>
        <form onSubmit={handleSubmit(onSubmit)}>
        <div className={styles.grid}>
            <div >
            <label style={{display:'block'}}  htmlFor="email" >Email</label>
           <input {...register("email") } style={{marginBottom:'30px'}} id="email" type="text" placeholder="coloque seu email !"  required/>
           </div>
           <div>
           <label style={{display:'block'}}   htmlFor="senha">Senha</label>
           <input  {...register("senha")} style={{marginBottom:'30px'}}  id="senha" type="text" placeholder="coloque a sua senha !" required/>
           </div>
         
       
 {  (session) ?  (
   

      <>
        Signed in as {session?.user.email} + {session.user.name} <br />
        <button onClick={() => signOut({redirect:false,callbackUrl:'/'})}>Sign out</button>
      </>
    
 ):(
    <>
    <div>{error}</div>
      Not signed in <br />
      <button >Sign in</button>
 
    </>
  )

 }
        </div>
        </form>
      </main>

      <footer className={styles.footer}>
          <span className={styles.logo}>
          Desenvolvido por will isaque
          </span>
      </footer>
    </div>
    
  );
}
export  async function getServerSideProps({req}){
console.log(await getToken({req}))
return {
  props:{

  }
}
}

